{% set name = "hierarchicalforecast" %}
{% set version = "0.4.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/hierarchicalforecast-{{ version }}.tar.gz
  sha256: 6add2a50f3536a7df045e28c366e72b8c71b5782cd477a95ad9f9821be886cc3

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - pip
    - python >=3.7
  run:
    - python >=3.7
    - numba
    - numpy <1.24
    - pandas
    - scikit-learn
    - quadprog
    - packaging
    - statsmodels
    - matplotlib-base
    - tqdm

test:
  imports:
    - hierarchicalforecast
  commands:
    - pip check
  requires:
    - pip

about:
  home: https://github.com/Nixtla/hierarchicalforecast/tree/main/
  summary: Hierarchical Methods Time series forecasting
  license: Apache-2.0
  license_file: LICENSE
  description: |
    **HierarchicalForecast** offers a collection of reconciliation methods, 
    including `BottomUp`, `TopDown`, `MiddleOut`, `MinTrace` and `ERM`. 

    ## 🎊 Features 

    * Classic reconciliation methods:
        - `BottomUp`: Simple addition to the upper levels.
        - `TopDown`: Distributes the top levels forecasts trough the hierarchies.

    * Alternative reconciliation methods:
        - `MiddleOut`: It anchors the base predictions in a middle level. The levels 
          above the base predictions use the bottom-up approach, while the levels below 
          use a top-down.
        - `MinTrace`: Minimizes the total forecast variance of the space of coherent 
          forecasts, with the Minimum Trace reconciliation.
        - `ERM`: Optimizes the reconciliation matrix minimizing an L1 regularized objective.

    PyPI: [https://pypi.org/project/hierarchicalforecast/](https://pypi.org/project/hierarchicalforecast/)

  doc_url: https://nixtla.github.io/hierarchicalforecast/
  dev_url: https://github.com/Nixtla/hierarchicalforecast

extra:
  recipe-maintainers:
    - sugatoray
    - AzulGarza
    - jmoralez
    
